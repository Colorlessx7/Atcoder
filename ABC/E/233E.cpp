#include<bits/stdc++.h>
#include<atcoder/all>
using namespace atcoder;
using namespace std;
#define rep(i,N) for(ll i = 0; i < N; i++)
#define rep2(i,N) for(ll i = 1; i <= N; i++)
#define rep3(i,N) for(ll i = N - 1; i >= 0; i--)
#define rep4(i,N) for(ll i = N; i > 0; i--)
#define replr(i,l,r) for(ll i = l; i < r; i++)
#define reprl(i,l,r) for(ll i = l; i >= r; i--)
#define all(x) x.begin(),x.end() 
#define allr(x) x.rbegin(),x.rend() 
using ll = long long;
using P = pair<ll,ll>;
void chmin(ll &x, ll y){ x = min(x,y); }
void chmax(ll &x, ll y){ x = max(x,y); }
int main(){
  //数字(10^500000)なので文字列として読み込む
  string s;
  cin >> s;
  //正解の数字列
  string ans;
  //桁の和 
  ll w = 0;
  //文字列の長さ(桁数)
  ll n = s.size();
  //桁の和を求める処理
  rep(i,n){
    //i桁の数字s[i]-'0'を桁の和wにたす
    w += s[i] - '0';
  }
  //x:今見ている桁の和+一つ下の桁の繰り上がりの数
  ll x = 0;
  //問題の計算結果をn桁分下の桁から決めていく処理
  rep3(i,n){
    //現時点での桁の和をxにたす
    //この時点でxの下一桁が現在着目している桁の値になる
    //この時点でxの下一桁以外の桁が繰り上がりの数となる
    x += w;
    //次の桁に移る前にsの今見ている桁の数字を桁の和からひく
    w -= s[i] - '0';
    //現在着目している桁の値をxの下一桁に決定する
    ans += '0' + (x%10);
    //xを10で割ることでxが繰り上がりの数になり、次の桁を決める時の計算に持ち越される
    x /= 10;
  }
  //問題の計算の結果がn桁より大きくなる場合上のループを抜けても繰り上がりxが残っている
  //のでn桁より大きい桁についてそれぞれ下の桁から数字を決めていく
  while(x){
    //繰り上がりの数xを10で割った余りが桁の数字となる
    ans += '0' + (x%10);
    //xを10で割り、xが0でないなら次の桁に持ち越す
    x /= 10;
  }
  //下の位から順に文字列の末尾に加えていったため逆順になっているのでreverse
  reverse(all(ans));
  cout << ans << endl;
  return 0;
}
//桁数が明らかにllにすら収まらないため文字列上で算数計算をする問題
//12345というsが与えられたら答えは12345+1234+123+12+1となる
//(末尾の数字を1つずつ消しながら足したもの)
//これを位毎に分けてみると
//12345
// 1234
//  123
//   12
//    1
///////
//   15
//  10
//  6
// 3
//1
//12715
//という筆算の形となる
//下一桁目:(sの上n桁の数字の合計)%10
//下二桁目:(sの上n-1桁の数字の合計+下一桁目からの繰り上がり)%10
//下三桁目:(sの上n-2桁の数字の合計+下二桁目からの繰り上がり)%10
//下四桁目:(sの上n-3桁の数字の合計+下三桁目からの繰り上がり)%10
//下五桁目:(sの上n-4桁の数字の合計+下四桁目からの繰り上がり)%10
//下六桁目:下五桁目からの繰り上がり%10
//下七桁目:下六桁目からの繰り上がり%10...という形になる
//これを実装する
