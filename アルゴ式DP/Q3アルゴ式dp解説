Q3 部分和問題とナップザック問題
  3-1
  問題傾向 部分和問題 移動先のパターン数の数え上げ 
  テーブル dp[i][j]:マス(i,j)にコマが存在しうるかどうか
  サイズ dp(n,vector<bool>(m))
  初期値 dp[0][0] = 1
  漸化式 dp[i+1][j] = 1 (dp[i][j]=True)
        dp[i+1][j+a[i]] = 1 (a[i]が存在すること,移動先が範囲内にあることが条件)(i <= n-2 && j + a[i] < m)
  最終出力 dp[n-1][j](0<=j<=m)のTrueの数
  
  3-2
  問題傾向 部分和問題 移動先のパターン数の数え上げ 
  テーブル dp[i][j]:i番目のボールまでを使って重さjにできるかどうか
  サイズ dp(n+1,vector<bool>(m+1))
  初期値 dp[0][0] = 1
  漸化式 dp[i+1][j] = 1 (dp[i][j]=True)
        dp[i+1][j+w[i]] = 1 (j + w[i] <= m)
  最終出力 dp[n][m]の1,0でYes,No
  
  3-3
  問題傾向 ナップザック問題 特定位置到着可能性問題 数値最大化
  テーブル dp[i][j]:マス(i,j)にコマが到達するまでの最大スコア(到達不能の場合は−1)
  サイズ dp(n+1,vector<int>(m))
  初期値 dp[0][0] = 0 それ以外-1
  漸化式 dp[i+1][j] = max(dp[i][j],dp[i+1][j]) (dp[i][j]!=0)
        dp[i+1][j+a[i]] = max(dp[i+1][j+a[i]],dp[i][j]+b[i]) (j+a[i]<m) (aは移動量の配列 bはスコアの配列)
  最終出力 dp[n-1][m-1]
  
  3-4
  問題傾向 ナップザック問題 特定位置到着可能性問題 数値最大化
  テーブル dp[i][j]:i番目までのボールを使って重さの合計がjになった時の価値の最大値(到達不能の場合は−1)
  サイズ dp(n+1,vector<int>(m+1))
  初期値 全て0
  漸化式 dp[i+1][j] = max(dp[i][j-w[i]]+v[i],dp[i][j]) (j >= w[i])
        dp[i+1][j] = dp[i][j] (j < w[i])
  最終出力 dp[n][m]
  
  3-5
  問題傾向 部分和問題 特定位置到着可能性問題 数値最小化
  テーブル dp[i][j]:i番目までのボールを使って重さの合計をjにした時の個数の最小値(到達不能の場合は−1)
  サイズ dp(n+1,vector<int>(m+1))
  初期値 dp[0][0] = 0 それ以外INF
  漸化式 dp[i+1][j] = min(dp[i][j],dp[i+1][j]) (dp[i][j] != INF)
        dp[i+1][j+w[i]] = min(dp[i+1][j+w[i]],dp[i][j]+1) (j + w[i] <= m)
  最終出力 dp[n][m] (INFなら-1)
  
  3-6
  問題傾向 部分和問題 特定位置到着可能性問題
  テーブル dp[i][j]:N枚のカードのうち、最初のi枚のカードのみを考える。そしてそのi枚のカードから何枚か選んだ総和がAで割ってjあまるようにすることが可能かどうか
  サイズ dp(n+1,vector<bool>(a))
  初期値 dp[0][0] = 1
  漸化式 dp[i+1][j] = 1, dp[i+1][(j+x[i])%a] = 1 (両方ともdp[i][j]=True) (x:カード配列,a:割る数)
  最終出力 dp[n][b]が1,0でYes,No
  
  3-7
  問題傾向 パーティション問題亜種
  テーブル dp[i][j]:N枚のカードのうち、最初のi枚のカードのみを考える。そしてそのi枚のカードを2つのグループに分けたとき、
                  各グループの数値の総和の差がjとなるようにすることが可能かどうか 
  サイズ dp(n+1,vector<bool>(m+1)) (mはw配列の総計)
  初期値 dp[0][0] = 1
  漸化式 dp[i+1][abs(j-w[i])] = 1
        dp[i+1][j+w[i]] = 1 (両方ともdp[i][j]=True)
  最終出力 dp[n][j]がTrueになる最初のj
